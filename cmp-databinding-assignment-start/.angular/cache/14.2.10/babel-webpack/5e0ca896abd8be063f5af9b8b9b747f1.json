{"ast":null,"code":"import _classCallCheck from \"/Users/admin/learn/udemy-courses/angular-complete-guide/cmp-databinding-assignment-start/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/admin/learn/udemy-courses/angular-complete-guide/cmp-databinding-assignment-start/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./game-control/game-control.component\";\nimport * as i2 from \"./odd/odd.component\";\nfunction AppComponent_app_odd_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-odd\");\n  }\n}\nexport var AppComponent = /*#__PURE__*/(function () {\n  var AppComponent = /*#__PURE__*/function () {\n    function AppComponent() {\n      _classCallCheck(this, AppComponent);\n      this.oddNumbers = [];\n      this.evenNumbers = [];\n    }\n    _createClass(AppComponent, [{\n      key: \"onIntervalFired\",\n      value: function onIntervalFired(fireNumber) {\n        console.log(fireNumber);\n      }\n    }]);\n    return AppComponent;\n  }();\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 28,\n    vars: 0,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-xs-12\"], [3, \"intervalFired\"], [4, \"ngFor\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\");\n        i0.ɵɵtext(4, \"Bind it!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"ol\")(6, \"li\");\n        i0.ɵɵtext(7, \"Create three new components: GameControl, Odd and Even\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"li\");\n        i0.ɵɵtext(9, \"The GameControl Component should have buttons to start and stop the game\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"li\");\n        i0.ɵɵtext(11, \"When starting the game, an event (holding a incrementing number) should get emitted each second (ref = setInterval())\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"li\");\n        i0.ɵɵtext(13, \"The event should be listenable from outside the component\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"li\");\n        i0.ɵɵtext(15, \"When stopping the game, no more events should get emitted (clearInterval(ref))\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"li\");\n        i0.ɵɵtext(17, \"A new Odd component should get created for every odd number emitted, the same should happen for the Even Component (on even numbers)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"li\");\n        i0.ɵɵtext(19, \"Simply output Odd - NUMBER or Even - NUMBER in the two components\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"li\");\n        i0.ɵɵtext(21, \"Style the element (e.g. paragraph) holding your output text differently in both components\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(22, \"div\", 1)(23, \"div\", 2)(24, \"app-game-control\", 3);\n        i0.ɵɵlistener(\"intervalFired\", function AppComponent_Template_app_game_control_intervalFired_24_listener($event) {\n          return ctx.onIntervalFired($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"div\", 1)(26, \"div\", 2);\n        i0.ɵɵtemplate(27, AppComponent_app_odd_27_Template, 1, 0, \"app-odd\", 4);\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    dependencies: [i1.GameControlComponent, i2.OddComponent]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}